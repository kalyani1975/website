{"version":3,"sources":["config.js","Utils/apollo.js","Components/NavBar.js","Components/Common/LoaderSvg.js","Components/Common/Loader.js","Components/Blog/BlogContainer.js","Components/Blog/Card/CardContainer.js","Components/Blog/Card/CardHeader.js","Components/Blog/Card/CardCategory.js","Components/Blog/Card/CardTitle.js","Components/Blog/Card/CardDescription.js","Components/Blog/Card/CardReadingTime.js","Components/Blog/Card/Card.js","Containers/Home.js","Utils/emoji.js","Utils/tools.js","Utils/auth.js","Components/Post/PostContainer.js","Components/Post/PostTitle.js","Components/Post/PostDate.js","Components/Post/PostDateLink.js","Components/Post/PostReaction.js","Components/Post/BackButton.js","Components/Post/Author/AuthorDetails.js","Components/Post/Author/AuthorAvatar.js","Components/Post/Author/AuthorName.js","Components/Markdown/Overrides.js","Components/Post/Comment/Comment.js","Components/Post/Comment/CommentContainer.js","Components/Post/Comment/CommentLink.js","Components/Post/Comment/CommentLinkContainer.js","Containers/CommentsSection.js","Containers/BlogPost.js","Router.js","Application.js","serviceWorker.js","index.js"],"names":["config","backgroundColor","backgroundColorDark","titleColor","titleColorDark","subtitleColor","subtitleColorDark","client","ApolloClient","uri","request","operation","setContext","headers","authorization","atob","userClient","token","NavBar","Button","color","LoaderSvg","fill","width","height","viewBox","xmlns","stroke","fillRule","transform","strokeWidth","strokeOpacity","cx","cy","r","d","attributeName","type","from","to","dur","repeatCount","LoaderContainer","styled","span","Loader","BlogContainer","div","CardContainer","props","theme","mode","CardHeader","StyledCategory","body","CardCategory","value","key","id","style","name","CardTitle","h2","CardDescription","p","ReadingTime","CardReadingTime","time","Card","blog","useState","labels","setLabels","history","useHistory","useEffect","nodes","filter","map","i","readingTime","minutes","onClick","title","number","push","bodyText","GET_POSTS","gql","Home","posts","setPosts","useQuery","loading","error","data","console","repository","issues","v","emojis","getNameByEmoji","emoji","obj","reversed","Object","keys","forEach","reverseMapping","getAuthenticatedUser","a","localStorage","getItem","fetch","Headers","response","json","result","PostContainer","PostTitle","h1","PostDate","toggleBorder","PostDateLink","text","PostReaction","BackButton","button","AuthorDetails","AuthorAvatar","img","AuthorName","HyperLink","children","href","target","rel","className","jsx","CodeBlock","language","docco","Comment","comment","CommentContainer","src","author","avatarUrl","alt","login","moment","updatedAt","format","options","overrides","component","pre","CommentLink","CommentLinkContainer","CommentsSection","postUrl","comments","BlogHome","issueNumber","parseInt","window","location","split","pop","post","setPost","postNodeId","setPostNodeId","reactionPopup","setReactionPopup","postReactions","setPostReactions","postComments","setPostComments","reactionsContainer","useRef","userToken","setReactionFun","useCallback","reactions","reactions_array","element","emojiName","by","user","content","toggleReaction","length","reactionToAdd","mutate","mutation","node_id","current","forceUpdate","issue","go","back","url","onSelect","ref","counters","onAdd","createBrowserHistory","require","Router","exact","path","BlogPost","Application","Helmet","charSet","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2eab62cd.chunk.js","sourcesContent":["export const config = {\n  // Your Github Converted Token To Know How To Get Your Token Look at Readme.md\n  githubConvertedToken: \"ZGI2M2QxNTkxMmJhZTY1YjdmNTAzM2IxYjYyOGU1ZGY4YWRiNTRiOQ==\",\n\n  // Your Github UserName\n  githubUserName: \"kalyanisamriddhi\",\n\n  // Your Github Repo Name Where You Have your issues as Blog\n  githubRepo: \"kalyanisamriddhi\",\n\n  // Your Personal Blog Title\n  title: \"Kalyani Samriddhi\",\n\n  // Your Personal Blog Subtitle\n  subtitle: \"Kalyani Samriddhi NGO\",\n\n  // Header customization\n  header: {\n    backgroundColor: '#09cc7f', // can be a CSS gradient\n    backgroundColorDark: '#4C566A',\n    titleColor: '#002D5B',\n    titleColorDark: '#ffffff',\n    subtitleColor: '#454d72',\n    subtitleColorDark: '#D8DEE9',\n  },\n};\n","import ApolloClient from \"apollo-boost\";\n\nimport { config } from '../config'\n\nexport const client = new ApolloClient({\n  uri: \"https://api.github.com/graphql\",\n  request: operation => {\n    operation.setContext({\n      headers: {\n        authorization: `Bearer ${atob(config.githubConvertedToken)}`\n      }\n    });\n  }\n});\n\nexport const userClient = (token) => new ApolloClient({\n  uri: \"https://api.github.com/graphql\",\n  request: operation => {\n    operation.setContext({\n      headers: {\n        authorization: `Bearer ${token}`\n      }\n    });\n  }\n});","import React from 'react'\n\nimport { config } from \"../config\"\nimport { Button } from 'reactstrap';\n\nconst NavBar = () => {\n    return (\n        <>\n            <h1>Hello</h1>\n            <Button color=\"danger\">Danger!</Button>\n        </>\n    );\n}\n\nexport default NavBar;","import React from \"react\";\n\nexport default function LoaderSvg({ fill }) {\n  return (\n    <svg\n      width=\"80\"\n      height=\"80\"\n      viewBox=\"0 0 38 38\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      stroke={fill}\n    >\n      <g fill=\"none\" fillRule=\"evenodd\">\n        <g transform=\"translate(1 1)\" strokeWidth=\"2\">\n          <circle strokeOpacity=\".5\" cx=\"18\" cy=\"18\" r=\"18\" />\n          <path d=\"M36 18c0-9.94-8.06-18-18-18\">\n            <animateTransform\n              attributeName=\"transform\"\n              type=\"rotate\"\n              from=\"0 18 18\"\n              to=\"360 18 18\"\n              dur=\"1s\"\n              repeatCount=\"indefinite\"\n            />\n          </path>\n        </g>\n      </g>\n    </svg>\n  );\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport LoaderSvg from './LoaderSvg'\n\nconst LoaderContainer = styled.span`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 200px;\n`\n\nexport const Loader = () => (\n  <LoaderContainer>\n    <LoaderSvg fill=\"#2ecc71\" />\n  </LoaderContainer>\n)","import styled from 'styled-components'\n\nexport const BlogContainer = styled.div`\n  margin: 2rem auto 0;\n  width: 90%;\n  max-width: 700px;\n  padding: 20px 10px;\n`","import styled from 'styled-components'\n\nexport const CardContainer = styled.div`\n  cursor: pointer;\n  margin-bottom: 6rem;\n  border-radius: 10px;\n  padding: 10px;\n  transition: 0.2s;\n  position: relative;\n\n  :hover {\n    background-color: ${props => props.theme.mode === 'light' ? '#F5F5F5' : '#3B4252'};\n  }\n`","import styled from 'styled-components'\n\nexport const CardHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledCategory = styled.div`\n  display: inline-block;\n  background: #009bbb;\n  border-radius: 3px;\n  padding: 3px 15px;\n  font-size: 12px;\n  text-transform: uppercase;\n  color: ${ props => props.theme.body };\n  font-weight: 300;\n  line-height: 28px;\n  font-family: \"Quicksand\";\n  margin-right: 10px;\n`\n\nexport const CardCategory = ({ value }) => (\n  <StyledCategory\n    key={value.id}\n    style={{ backgroundColor: `#${value.color}` }}>\n    {value.name}\n  </StyledCategory>\n)","import styled from 'styled-components'\n\nexport const CardTitle = styled.h2`\n  font-size: 34px;\n`","import styled from 'styled-components'\n\nexport const CardDescription = styled.p`\n  font-size: 18px;\n  overflow: hidden;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n`","import React from 'react'\nimport styled from 'styled-components'\n\nconst ReadingTime = styled.p`\n  color: #b5b5b5;\n  font-size: 15px;\n  position: absolute;\n  top: -10px;\n  right: 10px;\n`\n\nexport const CardReadingTime = ({ time }) => (\n  <ReadingTime>{time} Min Read</ReadingTime>\n)","import React, { useState, useEffect } from \"react\";\nimport readingTime from \"reading-time\";\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  CardContainer,\n  CardHeader,\n  CardCategory,\n  CardReadingTime,\n  CardTitle,\n  CardDescription,\n} from './'\n\nexport const Card = ({ blog }) => {\n  const [labels, setLabels] = useState([]);\n  const history = useHistory();\n\n  const openBlog = (title, number) => {\n    history.push(`/blog/${title}/${number}`);\n  }\n\n  useEffect(() => {\n    const labels = blog.labels.nodes.filter((value) => {\n      return value.name !== \"blog\";\n    });\n\n    setLabels(labels);\n  }, [blog.labels.nodes]);\n\n  return (\n    <CardContainer>\n      <CardHeader>\n        <>\n        {labels.map((value, i) => {\n          return (\n            <CardCategory value={value} key={i} />\n          );\n        })}\n        </>\n        <CardReadingTime time={readingTime(blog.body).minutes} />\n      </CardHeader>\n      <div onClick={() => openBlog(blog.title, blog.number)}>\n        <CardTitle>{blog.title}</CardTitle>\n        <CardDescription>\n          {blog.bodyText}\n        </CardDescription>\n      </div>\n    </CardContainer>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from '@apollo/react-hooks';\n\nimport { config } from \"../config\";\nimport NavBar from \"../Components/NavBar\";\nimport { Loader } from '../Components/Common'\nimport { BlogContainer } from '../Components/Blog'\nimport { Card } from '../Components/Blog/Card'\n\nconst GET_POSTS = gql`\n{\n  repository(owner: \"${config.githubUserName}\", name: \"${config.githubRepo}\") {\n    issues(first: 100, states: OPEN, filterBy: { labels: \"blog\" }) {\n      nodes {\n        title\n        body\n        bodyHTML\n        bodyText\n        number\n        labels(first: 100) {\n          nodes {\n            color\n            name\n            id\n          }\n        }\n        author {\n          url\n          avatarUrl\n          login\n        }\n        updatedAt\n        id\n      }\n    }\n  }\n}\n`\n\nconst Home = () => {\n  const [posts, setPosts] = useState([]);\n  const { loading, error, data } = useQuery(GET_POSTS);\n\n  useEffect(() => {\n    if (!loading) {\n      if (error) {\n        console.error(error)\n      }\n      if (data) {\n        setPosts(data?.repository?.issues?.nodes)\n      }\n    }\n  }, [loading, error, data]);\n\n  return (\n    <>\n      <NavBar />\n      <BlogContainer>\n        {\n          loading\n            ? <Loader />\n            : posts.map((v, i) => {\n              return <Card blog={v} key={i} />;\n            })\n        }\n      </BlogContainer>\n    </>\n  );\n}\n\nexport default Home;\n","import { reverseMapping } from './tools'\n\nconst emojis = {\n  'THUMBS_UP': '👍',\n  'THUMBS_DOWN': '👎',\n  'LAUGH': '😄',\n  'HOORAY': '🎉',\n  'CONFUSED': '😕',\n  'HEART': '❤️',\n  'ROCKET': '🚀',\n  'EYES': '👀',\n}\n\nexport const getEmojiByName = (emojiName) => {\n  return emojis[emojiName] || '';\n};\n\nexport const getNameByEmoji = (emoji) => {\n  return reverseMapping(emojis)[emoji] || '';\n};","export const reverseMapping = (obj) => {\n  const reversed = {};\n  Object.keys(obj).forEach((key) => {\n      reversed[obj[key]] = key\n  });\n  return reversed;\n};","export const getToken = () => {\n  return localStorage.getItem('githubToken');\n}\n\nexport const getAuthenticatedUser = async () => {\n  const token = localStorage.getItem('githubToken');\n  if (token) {\n    const response = await fetch('https://api.github.com/user', {\n      headers: new Headers({\n        authorization: `Bearer ${token}`\n      }),\n    });\n    const result = await response.json();\n    result.token = token;\n    return result;\n  }\n}","import styled from 'styled-components'\n\nexport const PostContainer = styled.div`\n  margin: 2rem auto 0;\n  width: 90%;\n  max-width: 700px;\n  padding: 20px 10px;\n  position: relative;\n`","import styled from 'styled-components'\n\nexport const PostTitle = styled.h1`\n  @media only screen and (max-width: 768px) {\n    font-size: 30px;\n  }\n`","import styled from 'styled-components'\n\nexport const PostDate = styled.p`\n  color: ${ props => props.theme.toggleBorder };\n  font-weight: 400;\n  font-size: 14px;\n  margin-bottom: 0px;\n  margin-top: 0px;\n`","import styled from 'styled-components'\n\nexport const PostDateLink = styled.a`\n  font-size: 14px;\n  text-decoration: none;\n  transition-duration: 0.15s, 0.15s, 0.15s;\n  transition-timing-function: ease-in, ease-in, ease-in;\n  transition-delay: 0s, 0s, 0s;\n  color: ${ props => props.theme.toggleBorder };\n  \n  :hover {\n    color: ${ props => props.theme.text };\n  }\n`","import styled from 'styled-components'\n\nexport const PostReaction = styled.span`\n  position: static;\n  bottom: 60px;\n  animation-name: scale-in;\n  animation-duration: 0.15s;\n  animation-timing-function: cubic-bezier(0.2, 0, 0.13, 1.5);\n`\n","import styled from \"styled-components\";\n\nexport const BackButton = styled.button`\n  outline: none;\n  border: 1px solid;\n  font-size: 22px;\n  font-family: \"Shadows Into Light\", serif;\n  border-radius: 5px;\n  padding: 0px 20px 0 30px;\n  cursor: pointer;\n  position: relative;\n  background-color: ${ props => props.theme.body };\n  color: ${ props => props.theme.text };\n\n  :hover {\n    background-color: ${ props => props.theme.mode === 'light' ? '#373737' : '#6B8096' };\n    color: white;\n  }\n\n  :before {\n    content: \"\\\\27A4\";\n    position: absolute;\n    transform: translateY(-50%) rotate(180deg);\n    left: 10px;\n    font-size: 16px;\n    top: 54%;\n  }\n`;\n","import styled from 'styled-components'\n\nexport const AuthorDetails = styled.div`\n  display: flex;\n  align-items: center;\n`","import styled from 'styled-components'\n\nexport const AuthorAvatar = styled.img`\n  width: 50px;\n  height: 50px;\n  border-radius: 40px;\n  margin: 10px;\n  margin-left: 0px;\n`","import styled from 'styled-components'\n\nexport const AuthorName = styled.p`\n  margin-bottom: 0px;\n  margin-top: 0px;\n  font-size: 16px;\n  color: ${ props => props.theme.text };\n`","import React from \"react\";\n\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport {docco} from \"react-syntax-highlighter/dist/esm/styles/hljs\";\n\nexport const HyperLink = ({children, ...props}) => (\n  <a\n    href={props.href}\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n    className=\"blog-post-anchor\"\n  >\n    {children}\n    <style jsx=\"true\">\n      {`\n        a {\n          color: #484848;\n          font-weight: 400;\n        }\n      `}\n    </style>\n  </a>\n);\n\nexport const CodeBlock = ({children}) => (\n  <SyntaxHighlighter language=\"javascript\" style={docco}>\n    {children.props.children}\n  </SyntaxHighlighter>\n);\n","import React from \"react\";\nimport Markdown from \"markdown-to-jsx\";\nimport moment from \"moment\";\n\nimport {PostDate} from \"../\";\nimport {AuthorAvatar, AuthorDetails, AuthorName} from \"../Author\";\nimport {CommentContainer} from \"./\";\n\nimport {HyperLink, CodeBlock} from \"../../Markdown/Overrides\";\n\nexport const Comment = ({comment}) => {\n  return (\n    <CommentContainer>\n      <AuthorDetails>\n        <AuthorAvatar\n          src={comment.author.avatarUrl}\n          alt={comment.author.login}\n        />\n        <div>\n          <AuthorName>{comment.author.login}</AuthorName>\n          <PostDate>{moment(comment.updatedAt).format(\"DD MMM YYYY\")}</PostDate>\n        </div>\n      </AuthorDetails>\n\n      <Markdown\n        options={{\n          overrides: {\n            a: {\n              component: HyperLink,\n            },\n            pre: {\n              component: CodeBlock,\n            },\n          },\n        }}\n      >\n        {comment.body}\n      </Markdown>\n    </CommentContainer>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const CommentContainer = styled.div`\n  margin-top: 3rem;\n  border-radius: 10px;\n  padding: 10px 30px;\n  position: relative;\n  color: ${(props) => props.theme.text};\n  border: ${(props) => props.theme.text} solid 1px;\n  font-size: 16px;\n`;\n","import styled from \"styled-components\";\n\nexport const CommentLink = styled.a`\n  outline: none;\n  border: 1px solid;\n  font-size: 22px;\n  font-family: \"Shadows Into Light\", serif;\n  border-radius: 5px;\n  padding: 0px 20px 0 20px;\n  cursor: pointer;\n  position: relative;\n  background-color: ${ props => props.theme.body };\n  color: ${ props => props.theme.text };\n  text-decoration: none;\n  margin: auto;\n\n  :hover {\n    background-color: ${ props => props.theme.mode === 'light' ? '#373737' : '#6B8096' };\n    color: white;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const CommentLinkContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 3rem;\n`;\n","import React from \"react\";\n\nimport {\n  Comment,\n  CommentLink,\n  CommentLinkContainer,\n} from \"../Components/Post/Comment\";\n\nconst CommentsSection = ({postUrl, comments}) => {\n  return (\n    <>\n      <CommentLinkContainer>\n        <CommentLink href={postUrl + \"#issue-comment-box\"} target=\"_blank\">\n          Post a comment\n        </CommentLink>\n      </CommentLinkContainer>\n      {comments.map((v, id) => (\n        <Comment comment={v} key={id} />\n      ))}\n    </>\n  );\n};\n\nexport default CommentsSection;\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport moment from \"moment\";\nimport Markdown from \"markdown-to-jsx\";\nimport readingTime from \"reading-time\";\nimport { GithubSelector, GithubCounter } from \"react-reactions\";\nimport { userClient } from '../Utils/apollo'\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nimport { config } from \"../config\";\nimport { getEmojiByName, getNameByEmoji } from '../Utils/emoji';\nimport { getAuthenticatedUser } from '../Utils/auth'\nimport { Loader } from \"../Components/Common\";\nimport { PostContainer, PostTitle, PostDate, PostDateLink, PostReaction, BackButton } from \"../Components/Post\";\nimport { AuthorDetails, AuthorAvatar, AuthorName } from \"../Components/Post/Author\";\nimport { HyperLink, CodeBlock } from '../Components/Markdown/Overrides';\nimport CommentsSection from \"./CommentsSection\";\n\nexport default function BlogHome() {\n  const issueNumber = parseInt(window.location.href.split(\"/\").pop());\n  const GET_POSTS = gql`{\n    repository(owner: \"${config.githubUserName}\", name: \"${config.githubRepo}\") {\n      issue(number: ${issueNumber}) {\n        title\n        body\n        bodyHTML\n        url\n        bodyText\n        number\n        bodyHTML\n        author {\n          url\n          avatarUrl\n          login\n        }\n        reactions(first:100){\n          nodes{\n            content\n            user{\n              id\n              login\n            }\n          }\n        }\n        updatedAt\n        id\n        comments(first:100) {\n          nodes {\n            author {\n              ... on User {\n                avatarUrl\n                name\n                login\n              }\n            }\n            body\n            bodyHTML\n            bodyText\n            publishedAt\n            updatedAt\n          }\n        }\n      }\n    }\n  }\n  `;\n  const [post, setPost] = useState([]);\n  const [postNodeId, setPostNodeId] = useState('');\n  const [reactionPopup, setReactionPopup] = useState(false);\n  const [postReactions, setPostReactions] = useState([]);\n  const [postComments, setPostComments] = useState([]);\n  const { loading, error, data } = useQuery(GET_POSTS);\n  const reactionsContainer = useRef(null);\n  const userToken = localStorage.getItem('githubToken');\n\n  const setReactionFun = useCallback((reactions) => {\n    // {\n    //   emoji: \"👍\", // String emoji reaction\n    //   by: \"case\" // String of persons name\n    // }\n\n    let reactions_array = [];\n    reactions.forEach(element => {\n      let obj = {\n        by: element.user.login,\n        emoji: getEmojiByName(element.content)\n      };\n      reactions_array.push(obj);\n    });\n\n    setPostReactions(reactions_array);\n  }, []);\n\n  const toggleReaction = async (emoji) => {\n    let reactions = postReactions;\n    const user = await getAuthenticatedUser();\n    const existingReaction = reactions.filter(r => (r.emoji === emoji && r.by === user.login))\n\n    if (existingReaction.length === 0) {\n      const reactionToAdd = {\n        by: user.login,\n        emoji: emoji,\n      }\n\n      // Add the reaction\n      await userClient(userToken).mutate({\n        mutation: gql`\n          mutation AddReaction {\n            addReaction(input:{subjectId:\"${postNodeId}\",content:${getNameByEmoji(emoji)},clientMutationId:\"${user.node_id}\"}) {\n              reaction {\n                id\n              }\n            }\n          }\n        `\n      });\n\n      reactions.push(reactionToAdd);\n    } else {\n      // Remove the reaction\n      await userClient(userToken).mutate({\n        mutation: gql`\n          mutation RemoveReaction {\n            removeReaction(input:{subjectId:\"${postNodeId}\",content:${getNameByEmoji(emoji)},clientMutationId:\"${user.node_id}\"}) {\n              reaction {\n                id\n              }\n            }\n          }\n        `\n      });\n\n      // Remove the reaction from the state\n      reactions = reactions.filter(r => !(r.by === user.login && r.emoji === emoji))\n    }\n\n    setPostReactions(reactions);\n    reactionsContainer.current.forceUpdate(); // refresh the counter\n    setReactionPopup(false); // hiding the reactions choice\n  }\n\n  useEffect(() => {\n    if (!loading) {\n      if (data) {\n        const issues = data.repository.issue;\n        setPostNodeId(issues.id);\n        setPost(issues);\n        setReactionFun(issues.reactions.nodes);\n        setPostComments(issues.comments.nodes);\n      }\n    }\n  }, [loading, error, data, setReactionFun]);\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  const onBackClick = () => {\n    // ifthe previous page does not exist in the history list. this method to load the previous (or next) URL in the history list.\n    window.history.go();\n    // The back() method loads the previous URL in the history list.\n    window.history.back();\n  };\n\n  return (\n    <>\n      {post.title && (\n        <PostContainer>\n          <BackButton onClick={() => onBackClick()}>Back</BackButton>\n\n          <PostTitle>{post.title}</PostTitle>\n          <div>\n            <AuthorDetails>\n              <AuthorAvatar src={post.author.avatarUrl} alt={post.author.login} />\n              <div>\n                <AuthorName>{post.author.login}</AuthorName>\n                <PostDate>\n                  {moment(post.updatedAt).format(\"DD MMM YYYY\")} .{readingTime(post.body).minutes} Min Read .\n                  <PostDateLink href={post.url} target=\"_black\">\n                    View On Github\n                  </PostDateLink>\n                </PostDate>\n              </div>\n            </AuthorDetails>\n          </div>\n          <Markdown\n            options={{\n              overrides: {\n                a: {\n                  component: HyperLink\n                },\n                pre: {\n                  component: CodeBlock\n                }\n              }\n            }}\n          >\n            {post.body}\n          </Markdown>\n          {reactionPopup && (\n            <PostReaction>\n              {userToken\n                ? <GithubSelector onSelect={emoji => toggleReaction(emoji)} />\n                : <></>\n              }\n            </PostReaction>\n          )}\n          <GithubCounter\n            ref={reactionsContainer}\n            counters={postReactions}\n            onSelect={emoji => toggleReaction(emoji)}\n            onAdd={() => setReactionPopup(!reactionPopup)}\n          />\n          <CommentsSection postUrl={post.url} comments={postComments} />\n        </PostContainer>\n      )\n      }\n    </>\n  );\n}\n","import React from \"react\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\n\nimport Home from \"./Containers/Home\"\nimport BlogPost from \"./Containers/BlogPost\";\n\nvar createBrowserHistory = require(\"history\").createBrowserHistory;\nconst history = createBrowserHistory();\n\nconst Router = () => {\n  return (\n    <HashRouter history={history}>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/event/:title/:issueNumber\" component={BlogPost} />\n      </Switch>\n    </HashRouter>\n  );\n};\n\nexport default Router;\n","import React from 'react'\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { Helmet } from \"react-helmet\";\n\nimport { config } from './config'\nimport { client } from './Utils/apollo';\nimport Router from './Router';\n\nconst Application = () => {\n\n  return (\n    <>\n      <Helmet>\n        <title>{config.title}</title>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"description\" content={config.subtitle} />\n        <meta name=\"theme-color\" content={config.header.backgroundColor} />\n      </Helmet>\n      <ApolloProvider client={client}>\n        <Router />\n      </ApolloProvider>\n    </>\n  )\n};\n\nexport default Application;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport Application from './Application';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<Application />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nif (process.env.NODE_ENV === 'production') serviceWorker.unregister();\r\nelse serviceWorker.unregister();\r\n\r\n"],"sourceRoot":""}